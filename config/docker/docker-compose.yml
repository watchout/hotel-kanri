version: '3.8'

services:
  # Nginx - リバースプロキシ
  nginx:
    image: nginx:stable-alpine
    container_name: omotenasuai-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./config/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./config/nginx/sites-available:/etc/nginx/sites-enabled
      - ./config/nginx/ssl:/etc/nginx/ssl
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - hotel-saas
      - hotel-common
    restart: always
    networks:
      - omotenasuai-network

  # PostgreSQL - データベース
  postgres:
    image: postgres:14-alpine
    container_name: omotenasuai-postgres
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./config/postgres/init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    restart: always
    networks:
      - omotenasuai-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # RabbitMQ - メッセージブローカー
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: omotenasuai-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    restart: always
    networks:
      - omotenasuai-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis - キャッシュ
  redis:
    image: redis:alpine
    container_name: omotenasuai-redis
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: always
    networks:
      - omotenasuai-network
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  # hotel-common - 共通基盤
  hotel-common:
    build:
      context: ../hotel-common
      dockerfile: Dockerfile
    image: ${DOCKER_REGISTRY:-ghcr.io/watchout}/hotel-common:${COMMON_VERSION:-latest}
    container_name: omotenasuai-common
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      PORT: 3400
      DATABASE_URL: postgresql://${DB_USER}:${DB_PASSWORD}@postgres:5432/${DB_NAME}
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USER: ${RABBITMQ_USER}
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
    ports:
      - "3400:3400"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    restart: always
    networks:
      - omotenasuai-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3400/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # hotel-saas - AIコンシェルジュ
  hotel-saas:
    build:
      context: ../hotel-saas
      dockerfile: Dockerfile
    image: ${DOCKER_REGISTRY:-ghcr.io/watchout}/hotel-saas:${SAAS_VERSION:-latest}
    container_name: omotenasuai-saas
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      PORT: 3100
      COMMON_API_URL: http://hotel-common:3400
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USER: ${RABBITMQ_USER}
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
      DATABASE_URL: postgresql://${DB_USER}:${DB_PASSWORD}@postgres:5432/${DB_NAME}
      JWT_SECRET: ${JWT_SECRET}
      BASE_URL: ${BASE_URL:-https://dev-app.omotenasuai.com}
    ports:
      - "3100:3100"
    depends_on:
      hotel-common:
        condition: service_healthy
    restart: always
    networks:
      - omotenasuai-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3100/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  omotenasuai-network:
    driver: bridge

volumes:
  postgres-data:
  rabbitmq-data:
  redis-data:
