name: CI - Quality Gate

on:
  pull_request:
    branches:
      - main
      - develop
  push:
    branches:
      - main
      - develop

jobs:
  # ==========================================
  # Job 1: SSOT準拠チェック
  # ==========================================
  ssot-compliance:
    name: SSOT Compliance Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Check SSOT citation in PR
        if: github.event_name == 'pull_request'
        run: |
          # PR本文を取得
          PR_BODY=$(gh pr view ${{ github.event.pull_request.number }} --json body --jq .body)
          
          # SSOT参照があるかチェック
          if ! echo "$PR_BODY" | grep -q "docs/03_ssot"; then
            echo "❌ エラー: PR本文にSSO参照が見つかりません"
            echo "必須: docs/03_ssot/.../SSOT_XXX.md @ <commit-hash>"
            exit 1
          fi
          
          # 要件IDがあるかチェック
          if ! echo "$PR_BODY" | grep -qE "[A-Z]+-[0-9]+"; then
            echo "❌ エラー: PR本文に要件ID（XXX-nnn形式）が見つかりません"
            exit 1
          fi
          
          echo "✅ SSOT準拠チェック: 合格"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # ==========================================
  # Job 2: Lint & Typecheck
  # ==========================================
  lint-and-typecheck:
    name: Lint & Typecheck
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [hotel-common, hotel-saas]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: '${{ matrix.service }}/package-lock.json'
          
      - name: Install dependencies
        working-directory: ${{ matrix.service }}
        run: npm ci
        
      - name: Run ESLint
        working-directory: ${{ matrix.service }}
        run: npm run lint
        continue-on-error: true
        
      - name: Run TypeScript typecheck
        if: matrix.service == 'hotel-saas'
        working-directory: ${{ matrix.service }}
        run: npx nuxi typecheck
        continue-on-error: true

  # ==========================================
  # Job 3: Unit Tests
  # ==========================================
  unit-tests:
    name: Unit Tests (${{ matrix.service }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [hotel-common, hotel-saas]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: '${{ matrix.service }}/package-lock.json'
          
      - name: Install dependencies
        working-directory: ${{ matrix.service }}
        run: npm ci
        
      - name: Run unit tests
        working-directory: ${{ matrix.service }}
        run: npm run test:unit
        
      - name: Run coverage
        working-directory: ${{ matrix.service }}
        run: npm run test:coverage
        continue-on-error: true
        
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          directory: ${{ matrix.service }}/coverage
          flags: ${{ matrix.service }}
          name: ${{ matrix.service }}-coverage

  # ==========================================
  # Job 4: API Tests（hotel-common）
  # ==========================================
  api-tests:
    name: API Tests (hotel-common)
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: hotel_app
          POSTGRES_PASSWORD: password
          POSTGRES_DB: hotel_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
          
      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'hotel-common/package-lock.json'
          
      - name: Install dependencies
        working-directory: hotel-common
        run: npm ci
        
      - name: Run Prisma migrations
        working-directory: hotel-common
        run: npx prisma migrate deploy
        env:
          DATABASE_URL: postgresql://hotel_app:password@localhost:5432/hotel_test
        
      - name: Run API tests
        working-directory: hotel-common
        run: npm run test:api
        env:
          DATABASE_URL: postgresql://hotel_app:password@localhost:5432/hotel_test
          REDIS_URL: redis://localhost:6379
          TEST_API_URL: http://localhost:3400

  # ==========================================
  # Job 5: Build Check
  # ==========================================
  build:
    name: Build Check (${{ matrix.service }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [hotel-common, hotel-saas]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: '${{ matrix.service }}/package-lock.json'
          
      - name: Install dependencies
        working-directory: ${{ matrix.service }}
        run: npm ci
        
      - name: Build project
        working-directory: ${{ matrix.service }}
        run: npm run build

  # ==========================================
  # Job 6: Security Scan
  # ==========================================
  security:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
        
      - name: Run npm audit
        run: npm audit --audit-level=moderate || echo "⚠️ Security vulnerabilities found"
        
      - name: Check for secrets
        if: github.event_name == 'pull_request'
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: ${{ github.event.pull_request.base.sha }}
          head: ${{ github.event.pull_request.head.sha }}

  # ==========================================
  # 最終ゲート: 全ジョブ成功確認
  # ==========================================
  quality-gate:
    name: Quality Gate - All Checks Passed
    runs-on: ubuntu-latest
    needs:
      - ssot-compliance
      - lint-and-typecheck
      - unit-tests
      - api-tests
      - build
      - security
    
    steps:
      - name: All checks passed
        run: |
          echo "✅ 全てのチェックが合格しました！"
          echo "🎉 マージ可能な状態です"
