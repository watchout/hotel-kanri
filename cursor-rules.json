{
  "$schema": "https://docs.cursor.so/schemas/v1/rules.schema.json",
  "rules": [
    {
      "description": "プロジェクト全体方針",
      "content": [
        "このプロジェクトはホテル向け統合システム（PMS + AIコンシェルジュ + CRM）です。",
        "すべてのコードはTypeScriptで記述すること。",
        "コード編集前に必ず /docs/spec や /docs/api の仕様を参照すること。",
        "決定事項や新しい型定義は必ず /docs に反映すること。",
        "ハルシネーションや根拠のない推測は厳禁。必ず既存のドキュメントや実装に基づいて開発すること。",
        "短絡的な解決方法ではなく、長期的な保守性を考慮した実装を行うこと。"
      ]
    },
    {
      "description": "コーディング規約",
      "content": [
        "命名規則はcamelCase（関数、変数）、PascalCase（クラス、コンポーネント）。",
        "全ての関数にJSDocコメントを付けること。",
        "エラーハンドリングは try/catch を必須とし、ユーザー向けエラーを返すこと。",
        "Promiseはasync/awaitを使用。",
        "コードの可読性を最優先し、複雑なワンライナーよりも明確な複数行の実装を優先すること。",
        "全てのAPIエンドポイントは適切なバリデーションを実装すること。"
      ]
    },
    {
      "description": "テストルール",
      "content": [
        "新規コードには必ずVitestの単体テストを追加する。",
        "テストファイルは同ディレクトリの __tests__ フォルダ内に配置。",
        "AI生成コードはテストパス後のみコミット可能。",
        "テストカバレッジは最低80%を維持すること。",
        "重要な機能やバグ修正には必ず統合テストも追加すること。"
      ]
    },
    {
      "description": "AIエディタ利用ルール",
      "content": [
        "コードを書く前に必ず関連する仕様.mdを読み込み、理解してから編集する。",
        "未定義の仕様は仮実装せず、TODOコメントを残す。",
        "既存コードを壊さないよう差分生成を行う。",
        "1回の編集リクエストでは1つのタスクだけ対応する。",
        "実装前に必ず既存コードの構造と設計パターンを理解すること。",
        "仕様が不明確な場合は、推測せずに明確化を求めること。"
      ]
    },
    {
      "description": "データ連携・統合",
      "content": [
        "共通DBスキーマは /docs/db/schema.prisma を参照。",
        "API設計は必ず /docs/api/openapi.yaml に基づくこと。",
        "PMS・CRM・AIコンシェルジュ間の連携はEventBus経由を原則とする。",
        "全てのテーブルにはtenant_idを含めること（マルチテナント対応）。",
        "データ整合性を保つため、トランザクション処理を適切に実装すること。",
        "システム間連携では必ずイベント駆動型アーキテクチャを採用すること。"
      ]
    },
    {
      "description": "セキュリティルール",
      "content": [
        "全てのAPIエンドポイントは適切な認証・認可チェックを実装すること。",
        "JWTトークンは共通認証基盤を使用し、独自実装を避けること。",
        "機密データは必ず暗号化して保存すること。",
        "SQLインジェクションやXSSなどの脆弱性対策を必ず実装すること。",
        "ログには個人情報や機密情報を出力しないこと。"
      ]
    },
    {
      "description": "システム間連携ルール",
      "content": [
        "hotel-saasは顧客・予約情報を参照のみとし、更新は行わないこと。",
        "hotel-pmsは予約の正本を管理し、更新時は必ずイベントを発行すること。",
        "hotel-memberは顧客マスタの正本を保持し、限定的な項目のみ他システムからの更新を許可する。",
        "システム間の直接DBアクセスは禁止し、APIまたはイベント経由で連携すること。",
        "各システムは指定されたポート番号を厳守すること（saas:3100, member:3200, pms-browser:3300, pms-electron:3301, common:3400）。"
      ]
    }
  ]
}