# 🐳 部分統合Docker Compose設定
# hotel-common + hotel-saas 統合テスト
# 作成者: Iza（統合管理者）
# 日付: 2025年1月18日

services:
  # ☀️ hotel-saas（Sun担当）- AIコンシェルジュシステム
  saas:
    build:
      context: ../hotel-saas
      dockerfile: Dockerfile
      target: build
    container_name: hotel-saas-partial
    working_dir: /app
    volumes:
      - ../hotel-saas:/app
      - saas_node_modules:/app/node_modules
      - saas_cache:/app/cache
    command: sh -c "npm install && npm run dev"
    environment:
      - NODE_ENV=development
      - NUXT_PORT=3100
      - NUXT_HOST=0.0.0.0
      - DATABASE_URL=postgresql://hotel_app:password@db:5432/hotel_unified_db
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=password
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - JWT_SECRET=hotel-saas-integration-secret-key-2025
      - UNIFY_ENV=dev
    ports:
      - "3100:3100"
    depends_on:
      - db
      - redis
      - common
    networks:
      - hotel-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3100/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # 🌊 hotel-common（Iza担当）- 統合基盤システム
  common:
    build:
      context: ../hotel-common
      dockerfile: Dockerfile
    container_name: hotel-common-partial
    environment:
      - NODE_ENV=development
      - PORT=3400
      - API_PORT=3401
      - DATABASE_URL=postgresql://hotel_app:password@db:5432/hotel_unified_db
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=password
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - JWT_SECRET=hotel-common-integration-secret-key-2025
      - UNIFY_ENV=dev
    ports:
      - "3400:3400"
      - "3401:3401"
    depends_on:
      - db
      - redis
    networks:
      - hotel-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3400/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # 🗄️ PostgreSQL統一データベース
  db:
    image: postgres:16-alpine
    container_name: hotel-db-partial
    environment:
      - POSTGRES_DB=hotel_unified_db
      - POSTGRES_USER=hotel_app
      - POSTGRES_PASSWORD=password
      - PGDATA=/var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../hotel-common/prisma/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - hotel-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U hotel_app -d hotel_unified_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # 🔴 Redis統一キャッシュ
  redis:
    image: redis:7-alpine
    container_name: hotel-redis-partial
    command: redis-server --requirepass password
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - hotel-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

volumes:
  saas_node_modules:
    driver: local
  saas_cache:
    driver: local
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  hotel-network:
    driver: bridge
    name: hotel-network-partial
